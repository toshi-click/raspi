<system>
#  log_level [info|warn|error|fatal|debug|trace]
  log_level error
#  without_source
</system>

<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

# サーバーのログ収集系
<source>
    @type tail
    path /var/log/syslog
    pos_file /var/tmp/syslog.pos
    format /^(?<log>.*)$/
    keep_time_key true
    tag system.syslogmessages
</source>
<source>
    @type tail
    path /var/log/secure
    pos_file /var/tmp/secure_log.pos
    format /^(?<log>.*)$/
    keep_time_key true
    tag system.syslogsecure
</source>
<source>
    @type tail
    path /var/log/mail.log
    pos_file /var/tmp/maillog.pos
    format /^(?<log>.*)$/
    keep_time_key true
    tag system.syslogmail
</source>
<source>
    @type tail
    path /var/log/rkhunter.log
    pos_file /var/tmp/rkhunter.pos
    format /^(?<log>.*)$/
    keep_time_key true
    tag system.syslogrkhunter
</source>

#### Filter
### Add MyHostname
<filter **.*>
  @type record_transformer
  <record>
    hostname ${hostname}
    tag ${tag}
  </record>
</filter>

# ホストのシステムログは直slackへの通知と集積サーバーへ転送する
<match **.*>
    @type copy
    <store>
        @type forward
        transport tls
        tls_cert_path /etc/td-agent/certs/fluentd.crt
        tls_allow_self_signed_cert true
        tls_verify_hostname false
      #  compress gzip
        <server>
          host {{ fluentd.send_server.name }}
          port {{ fluentd.send_server.port }}
        </server>
        <security>
          self_hostname {{ host.name }}
          shared_key {{ fluentd.F8XWPh33woGgaPpSjKhvAhciGF2Mrt9zWHy6szDuonBoTb2eeSVUpq3zqq63va2a }}
        </security>
        <buffer>
          @type file
          path /var/log/td-agent/buffer/sec_forward
        </buffer>
        flush_interval 60s
    </store>
    <store>
        type relabel
        @label @rewrite
    </store>
</match>
<label @rewrite>
    # システムのログで該当メッセージがあった場合に発報
    <filter system.*>
        @type ngrep
        <regexp>
            key log
            pattern (kernel|panic|halt|logrotate)
        </regexp>
        <exclude>
            key log
            pattern (IPv6: ADDRCONF|br-|ansible-file: Invoked|device veth|ansible-stat: Invoked|: XFS .dm-|: renamed from|docker[0-9]+: port [1-9]*\(veth[a-zA-Z0-9]*\))
        </exclude>
    </filter>
    <match system.*>
        @type slack
        webhook_url "{{ slack.web_hook_url }}"
        channel "#{{ slack.channel }}"
        icon_emoji "#{{ slack.icon }}"
        username "{{ host.name }}_SystemLogGrep"
        message %s %s %s
        message_keys tag,message,log
        flush_interval 180s
    </match>
</label>
